install.packages(devtools)
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
head(Bodyweight)
head(BodyWeight)
table(BodyWeight$Diet)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
install.packages("ggplot2")
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
g <- ggplot(movies, aes(votes, rating))
print(g)
g + geom()
qplot(votes, rating, data = movies)
qplot(votes, rating, data = movies) + geom_smooth()
cwd
cwd()
cwd();
getwd()
setwd("C:/Users/Liza/Documents/DataScience_ReproducibleResearch/CourseProj1")
getwd()
setwd("C:/Users/Liza/Documents/DataScience_ReproducibleResearch/CourseProj1/ReproducibleResearchCP1")
getwd()
cls <- c("integer","character","integer")
df <- read("activity.csv",head=TRUE, colClasses=cls, na.strings="NA")
df <- read.csv("activity.csv",head=TRUE, colClasses=cls, na.strings="NA")
head(df)
cls<-c("integer","character","date")
df <- read.csv("activity.csv",head=TRUE, colClasses=cls, na.strings="NA")
cls <- c("integer","character","integer")
df <- read.csv("activity.csv",head=TRUE, colClasses=cls, na.strings="NA")
head(df)
df$date <- as.Date(df$date)
df_noNA <- subset(df,!is.na(df$steps))
dailySum <- tapply(df_noNA$steps, df_noNA$date, sum, na.rm=TRUE, simplify=T)
dailySum <- dailySum(!is.na(dailySum))
head(dailySum)
hist(x=dailySum,
col="blue",
breaks=20,
xlab="Daily Total Steps Taken",
ylab="Frequency",
main="The Distribution of Daily Total Steps Taken")
mean(dailySum)
median(dailySum)
avgInterval <- tapply(df_noNa$steps, df_noNA$interval, mean, na.rm=TRUE, simplify=T)
avgInterval <- tapply(df_noNA$steps, df_noNA$interval, mean, na.rm=TRUE, simplify=T)
df_avgInt <- data.frame(interval=as.integer(names(avgInterval)),avg=avgInterval)
with(df_avgInt,
plot(interval,
avg,
type="l",
xlab="5-Minute Intervals",
ylab="Average Steps in the Interval - All Days"))
head(df_avgInt)
tail(df_avgInt)
max_steps <- max(df_avgInt$avg)
df_avgInt[df_avgInt$avg == max_steps, ]
sum(is.na(df$steps))
df_fill <- df
k <- is.na(df_fill$steps)
avgInterval <- tapply(df_noNA$steps, df_noNA$interval, mean, na.rm=TRUE, simplify=T)
df_fill$steps[k] <- avgInterval[as.character(df_fill$interval[ndx])]
df_fill$steps[k] <- avgInterval[as.character(df_fill$interval[k])]
dailySumFilled <- tapply(df_fill$steps, df_fill$date, sum, na.rm=TRUE, simplify=T)
hist(x=dailySumFilled,
col="blue",
breaks=20,
xlab="Daily Steps",
ylab="Frequency",
main="The Distribution of Daily Total With Missing Data Imputed")
mean(dailySumFilled)
median(dailySumFilled)
is_weekday <- function(d) {
wd <- weekdays(d)
ifelse (wd == "Saturday" | wd == "Sunday", "weekend", "weekday")
}
wndx <- sapply(df_fill$date, is_weekday)
df_fill$wk <- as.factor(wndx)
head(df_fill)
df_dayOrEnd <- aggregate(steps ~ wk+interval, data=df_fill, FUN=mean)
library(lattice)
xyplot(steps ~ interval | factor(wk),
layout = c(1, 2),
xlab="Interval",
ylab="Number of Steps",
type="l",
lty=1,
data=df_dayOrEnd)
